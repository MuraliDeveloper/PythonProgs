Inheritence:

-> relation between two classes
-> IS-A
-> there are two types of classes.
  a)Parent class/Super class/Base class
  b)Sub class/child class/derived class
    

 Ex:
 1.Parent class : Loan
 Child classes: Vehicleloan, marriageLoan, personalLoan

 2.Parent class : Account
 Child classes: CurrentAccount , LoanAccount ,CreditCardAccount

 3.Parent class : Card
 Child classes: CreditCard , DebitCard , VirtalCard


Public properties and funtions are inherited/available to child classes from parent class.
private cannot be inherited.

adv: 
reusability of instance variables and methods
write instance variables and methods for parent and reuse for parent and child


Inheritence Types:
->Single
-> Multilevel
->Hierarchial
->Multiple

syntax:
class Person :
	  name=None
	  age=None
	  id=None

      def m1():
        print("in m1")

      def __m3():
        print("in m3")
  
#Person is a class
#name, age, id are instance variables
#m1 is public method
#m3 is private method ( if we write __ before the function name thn it wil be private)


How to make employee class as child class for Person:
--------------------------------------------------------
class Employee(Person): #Now Employee is the child of Person class
   <some code>


#Employee is the child class and Person is parent class
class Employee(Person):
	pan=None;
	pfNo=None;

    def m2():
      print("in m2")




How many I.V are in Person : 3  (id,name,age)
How manyI.V are in Employee : 5 (id,name,age,pan,pfNo)

  
How many METHODS are in Person : 2  ( m1() and m3() )
How many METHODS are in Employee :  2  ( m1()  & m2() )
  

-> IS-A
Inheritence is relatn between two classes ,
but the parent child and child obj are independent .
parent obj and child obj has no relationship.


->  HAS-A
relationship is Between the classes and also BETween the objs.
